// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level1":return tiles.createTilemap(hex`a0a0c0c0d010505020202040505010101010505050503020405050101010101010101010505050302020202040505010101010101010505050304050505080601010101010d010505050505050101010101010101050505050501010101010101010101010105050503040505050101010101010101010505050505050508060a0a0b0b01010d0105050505010101010101010101010101010101010101010101010101010101010505050501010101010101010101050f0c0c050a0a0a0806050501010e01010c010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010f01010105050505110601010101010e0b0101010101010101010101010101010101010101010101010101010101010101010101010101010101010105050c0c01010505050a0a0a080601010105010101010101010101010101010101010101010101010105050101010101010101010101010101010101010101010505050b0b1005010505050508060101050505050101010101010101010101010101010101010101010101010101010101010101010105050501010101010101010101010101010505050505080601010101010101010101010101010101010101010101010101010101010101010101010101010101050505010101010101010101010101010101050505050806070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070708`, img`
2222222222222222222222222222222222222222222222222222222222222222
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
222............................................................2
2..............................................................2
222.........................................................2222
2...............................................................
2...........................................................2222
2..............................................................2
2..............................................................2
2..............................................................2
2222222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tilePath5,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,sprites.builtin.forestTiles1,sprites.builtin.forestTiles2,sprites.builtin.forestTiles3,sprites.builtin.forestTiles4,sprites.builtin.forestTiles0,sprites.castle.tilePath8,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath7,sprites.castle.tilePath1,sprites.castle.tilePath9,sprites.dungeon.doorClosedEast], TileScale.Sixteen);
            case "level0":
            case "level3":return tiles.createTilemap(hex`40001900020303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303040205050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050402050505050505050505050505050505050505050505050505050505050506060605050506060605050505050505050505050505050505050505050505050504020505050505050505050505070505050505050507070707050505050505050505180505050505050a0a0a0a0a05050105050505050505050505050505050504020505050707050505050507070718050505050707071805050505050501050505050a05050505050605050a0a0a05050505050505050105050505010505050402050507070707070105050a07070605070707070a0705050505050707070505050505050505050505060505050518050a05050505050505050505050505050402050507070707070707070707070507070707070707070505050a0a0a0a050505050514050501010506050505050505050605050505050505050505050505040205050707070a07070707070707070707070a07070a0a050707070a0a05050506050a0514140501050605050505050606050505170505050505050505050504020507070707070707070a0808070707070707070a0a0a0a0a0a0a0a0a0a0a0506050105141414050506050506060605050a05050505050505060505050505040205070707070a0707070707080807070707080a0a0a0a0a0a0a0a0a0a0a0a0a050505050514141414140506050505050505010101050a0a0605050505050a04020507070708070708070a0709070807070a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a050a0a0a0a0a0a0a1414050a05050505050505050a0a0a0a0a0a0a0a0a0a0402050707070a090809070707090707070a0708080a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a141401050a0a0a050505050a0a0a120c130a0a0a0a0a0402050707070909180908070707070707070707080a170a0a170a0a0a0a0a0a0a0a0a0a0a0a0a0a0a14140501050a0a0a05050501010a0a120c0c0f0a0a0a0a04020a070707070707070907070707070a070707070a0a0a0a0a0a0a0a0a0a0a0a0a0a050505051414140b0b0b0105050501050501050a0a100c0c0c0d0b0b0b04020a0a070707070707070707070907080907070a0a0a0a0a0a0a0a0a0a0a0a0a050505050514140506050b0b0b0605050505050505050a0a100c0c0c0c0c0c11020a0a0707080707070707070707070708090a0a0a070a0a0a0a0a0a0a0a0a0a0505050514140a0a0a06050b0b0b0b05050505050505050a0a100e0e0b0b0b0402070707070808070707070707070709090707070a0a0a0a0a0a0a0a0a0a0a0505050505050a0a0a0a0a0606060b0b0b0b0b0505050505050a0a0a0a0a0a0a0402070707070708080718070707080707080807070707070a0a0a0a0a0a0a0505180505050501050a0a050505060606170b0b0b0b0b05050505010a0a0a0a0a040207070707070708070707070708080808070717070707070707070a0a0a0a050501010505010505050606050606061717170a0b0b0b0b0b0b0b0b0b0b0b0b04020a0a0a0a0a070707070707070707080807070707070707070705060a060a0a050505050505050505050506060501170a170a0a0a0a0a0a160c0c0c0c0c0c04020a0a0505050a0707070708070707070707070707070707070706050505060a0505050505050505050505050505050a0a0a0a0a0a0a0a160c0c0e0b0b0b0b04020a05050505010a070707070707050707071707070707070707070606060506050505050505051705050505050505050a0a0a0a0a0a160c0c150a0a0a0a0a0402050505050505050a07070707010105050505070707070507070705050505050505050517050505050505050505050a0a0a0a0a0d0d0c0c150a0a0a0a0a0a040205050505050505050505050705050505050505050505050505050505050105050505050505050501010505050505050a0a0a0a0e0e0e150a0a0a0a0a0a0a0402030303030303030303030303030303030303030303030303030303030303010303030303030303030303030303030303030303030303030303030303030304`, img`
2222222222222222222222222222222222222222222222222222222222222222
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..................................2...........................2
2...................................22.........................2
2...................................222........................2
2....................................22222.....................2
2........................................22....................2
2........................................22....................2
2.......................................22.....................2
2.....................................222222................2222
2....................................22...222...................
2...................................22.....2222.............2222
2............................................22222.............2
2...............................................22222..........2
2..................................................2222222222222
2..............................................................2
2..........................................................22222
2..............................................................2
2..............................................................2
2..............................................................2
2222222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.forestTiles1,sprites.builtin.forestTiles2,sprites.builtin.forestTiles3,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.castle.tileDarkGrass3,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass1,sprites.swamp.swampTile1,sprites.builtin.forestTiles0,sprites.castle.tilePath5,sprites.castle.tilePath2,sprites.castle.tilePath8,sprites.castle.tilePath3,sprites.castle.tilePath7,sprites.dungeon.doorClosedEast,sprites.castle.tilePath4,sprites.castle.tilePath6,sprites.builtin.forestTiles4,sprites.castle.tilePath9,sprites.castle.tilePath1,myTiles.tile9,myTiles.tile10], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level7":
            case "level7":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Water":
            case "tile1":return tile1;
            case "Water0":
            case "tile2":return tile2;
            case "Water1":
            case "tile3":return tile3;
            case "Weed":
            case "tile4":return tile4;
            case "myTile":
            case "tile5":return tile5;
            case "myTile0":
            case "tile6":return tile6;
            case "doorClosedEast":
            case "tile7":return tile7;
            case "myTile1":
            case "tile8":return tile8;
            case "daTree":
            case "tile9":return tile9;
            case "dedTree":
            case "tile10":return tile10;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
